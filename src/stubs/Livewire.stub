<?php

namespace App\Http\Livewire;

use Livewire\Component;
use Livewire\WithPagination;
use App\Models\{{modelName}};

class {{modelName}}s extends Component
{
    use WithPagination;

    public idModel = null;
	protected $paginationTheme = 'bootstrap';
    public $selected_id, $keyWord, {{updatefield}};
    public $updateMode = false;

    public function render()
    {
        if($this->idModel == null) {
		$keyWord = '%'.$this->keyWord .'%';
        return view('livewire.{{modelNamePluralLowerCase}}.view', [
            '{{modelNamePluralLowerCase}}' => {{modelName}}::latest(){{search}}
						->paginate(10),
        ]);
        } else {
            $keyWord = '%'.$this->keyWord .'%';
        return view('livewire.{{modelNamePluralLowerCase}}.show', [
            '{{modelNameLowerCase}}' => {{modelName}}::findOrFail($this->idModel),
        ]);
        }
    }

    public function cancel()
    {
        $this->resetInput();
        $this->updateMode = false;
    }

    private function resetInput()
    {		{{resetfields}}
    }

    public function store()
    {
        $this->validate([{{rules}}
        ]);

        {{modelName}}::create([ {{addfields}}
        ]);

        $this->resetInput();
		$this->emit('closeModal');
		session()->flash('message', '{{modelName}} Successfully created.');
    }

    public function edit($id)
    {
        $record = {{modelName}}::findOrFail($id);

        $this->selected_id = $id; {{editfields}}

        $this->updateMode = true;
    }

    public function update()
    {
        $this->validate([{{rules}}
        ]);

        if ($this->selected_id) {
			$record = {{modelName}}::find($this->selected_id);
            $record->update([ {{addfields}}
            ]);

            $this->resetInput();
            $this->updateMode = false;
			session()->flash('message', '{{modelName}} Successfully updated.');
        }
    }

    public function destroy($id)
    {
        if ($id) {
            $record = {{modelName}}::where('id', $id);
            $record->delete();
        }
    }
}
